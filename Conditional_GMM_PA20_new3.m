function [y, fC1a, fC1b] = Conditional_GMM_PA20_new3(T, m0, mrio, M, Rrup, D80, region)
    %%%%%%%%%%%%%%%%%% model coefficients %%%%%%%%%%%%%%%%%%%%%
    period = [0.01	0.02	0.03	0.04	0.05	0.075	0.1	0.12	0.15	0.17	0.2	0.25	0.3	0.4	0.5	0.75	1	1.5	2	3	4	5	7.5	10];
    ip = period ==T;       
 %%   
    tau = [0.0706	0.0733	0.0774	0.0782	0.0813	0.0833	0.0733	0.0667	0.0579	0.0531	0.0476	0.0432	0.0418	0.0388	0.0376	0.0440	0.0553	0.0688	0.0824	0.1155	0.1231	0.1115	0.0997	0.1062];
    phi = [0.1555	0.1592	0.1671	0.1663	0.1679	0.1657	0.1628	0.1586	0.1530	0.1504	0.1481	0.1446	0.1437	0.1442	0.1458	0.1476	0.1506	0.1560	0.1598	0.1631	0.1608	0.1579	0.1539	0.1449];
%%  
    a2 = [0.5030	0.5039	0.5025	0.5057	0.5085	0.5129	0.5144	0.5128	0.5108	0.5088	0.5058	0.5032	0.5015	0.4986	0.4961	0.4930	0.4911	0.4937	0.4961	0.5012	0.5059	0.5073	0.5100	0.5100];
    a3 = [0.5018	0.5025	0.5041	0.5063	0.5071	0.5087	0.5087	0.5094	0.5097	0.5101	0.5084	0.5096	0.5096	0.5108	0.5113	0.5084	0.5098	0.5003	0.4957	0.4927	0.4971	0.5008	0.5094	0.5162];
    b2 = [0.3000	0.1983	0.1029	0.1204	0.1488	0.2917	0.4369	0.5331	0.6550	0.7006	0.7496	0.7728	0.7590	0.7230	0.7263	0.6463	0.5791	0.5281	0.4964	0.4813	0.4942	0.5002	0.4992	0.5356];
    b3 = [0.2544	0.1870	0.1252	0.1165	0.1262	0.2160	0.3253	0.4212	0.5583	0.6224	0.6988	0.7532	0.7641	0.7717	0.8272	0.8471	0.8746	0.7722	0.6717	0.3768	0.1881	0.1694	0.2290	0.2155];
    %a1 = [0.3630	0.5600	0.7506	0.7215	0.6693	0.3540	0.0141	-0.2117	-0.4816	-0.5801	-0.6887	-0.7451	-0.7427	-0.7349	-0.7799	-0.7399	-0.7189	-0.6779	-0.6178	-0.4949	-0.4555	-0.4511	-0.5306	-0.5914];
    a6 = [-0.0062	-0.0124	-0.0218	-0.0223	-0.0204	-0.0145	-0.0063	-0.0035	-0.0016	-0.0019	-0.0002	-0.0008	-0.0014	-0.0017	-0.0048	-0.0178	-0.0253	-0.0331	-0.0396	-0.0523	-0.0590	-0.0616	-0.0484	-0.0387];
    %da1 = [-0.0596	-0.0864	-0.0992	-0.0949	-0.0937	-0.0697	-0.0424	-0.0293	-0.0203	-0.0199	-0.0183	-0.0147	-0.0112	-0.0014	0.0017	-0.0046	-0.0091	-0.0062	-0.0038	-0.0040	-0.0217	-0.0312	-0.0438	-0.0405];

    a4 = [0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0];
    a5 = [0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0];
    c4 = [-0.3330	-0.3368	-0.3438	-0.3311	-0.3234	-0.2905	-0.2641	-0.2502	-0.2341	-0.2293	-0.2278	-0.2217	-0.2159	-0.2073	-0.2003	-0.1788	-0.1671	-0.1501	-0.1445	-0.1391	-0.1219	-0.1128	-0.0938	-0.0783];
    a1 = [0.3034	0.4736	0.6514	0.6266	0.5756	0.2843	-0.0283	-0.241	-0.5019	-0.6	-0.707	-0.7598	-0.7539	-0.7363	-0.7782	-0.7445	-0.728	-0.6841	-0.6216	-0.4989	-0.4772	-0.4823	-0.5744	-0.6319];
%% Coefficient for the EAST
if strcmp(region,'cond2')
    c4 = [-0.3626	-0.3641	-0.3722	-0.3885	-0.3962	-0.3636	-0.3469	-0.3290	-0.3090	-0.2993	-0.2919	-0.2741	-0.2576	-0.2355	-0.2170	-0.1776	-0.1555	-0.1347	-0.1325	-0.1556	-0.1527	-0.1404	-0.0957	-0.0716];
elseif strcmp(region,'ba19')
    c4 = [-0.3330	-0.3368	-0.3438	-0.3311	-0.3234	-0.2905	-0.2641	-0.2502	-0.2341	-0.2293	-0.2278	-0.2217	-0.2159	-0.2073	-0.2003	-0.1788	-0.1671	-0.1501	-0.1445	-0.1391	-0.1219	-0.1128	-0.0938	-0.0783];
    da1	= [0.2447	0.2466	0.2604	0.2633	0.2704	0.2716	0.2656	0.2561	0.2360	0.2275	0.2094	0.1783	0.1523	0.1062	0.0692	0.0204	-0.0053	-0.0083	-0.0240	0.0394	0.1056	0.1654	0.2585	0.2931];
    a4 = [-0.1284	-0.1459	-0.1548	-0.1407	-0.1239	-0.0670	-0.0280	-0.0148	-0.0092	-0.0070	-0.0098	-0.0202	-0.0312	-0.0434	-0.0696	-0.1269	-0.1653	-0.1842	-0.2076	-0.2388	-0.2757	-0.2870	-0.2767	-0.2376];
    a5 = [0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0	0.0];
    a1 = a1 + da1;    
end
%%
    if M < 5.5
        C1 = a2(ip)*log(m0); 
        C2 = b2(ip)*log(mrio); 
    elseif M<=7.0
        C1 = (a2(ip) + (a3(ip)-a2(ip))*(M-5.5)/1.5)*log(m0);
        C2 = (b2(ip) + (b3(ip)-b2(ip))*(M-5.5)/1.5)*log(mrio);
    else
        C1 = a3(ip)*log(m0);
        C2 = b3(ip)*log(mrio);
    end
        C3 = a4(ip)*(M-5.5) + a5(ip)*(8.5-M).^2;  
     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%         if M < 5.5
%             C1a = 1*log(mrio); 
%             C1b = 0;
%         elseif M<=7.0
%             C1a = (1 + (0-1)*(M-5.5)/1.5)*log(mrio);  
%             C1b = 1*(M-5.5)/1.5*log(mrio);
%         else
%             C1a = 0;
%             C1b = 1*log(mrio);
%         end
           fC1a = a1(ip);
           fC1b = c4(ip);
     %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
           fgeo = a6(ip)*log(Rrup + 5*exp(0.4*(M-6.0)));
           f4 =  c4(ip)*log(D80);
     %%%%%%%%%%%%% the conditional spectral accelaration %%%%%%
          y = exp(a1(ip) +  C1 + C2 + C3 + fgeo +  f4);
               
          sigT = sqrt(tau(ip)^2 + phi(ip)^2);
end


%  function [dur, sd] = AS1996duration(M, Rrup, nias, site_cond)
%     
%      % nias: normalized Arias intensity: default is 0.85.
% 
%      delsig = exp(5.204 + 0.851*(M-6));
%      
%      M0 = 10^(1.5*M + 16.05);
%      
%      ln_dur = log((delsig/M0)^(-1/3)/(4.9e6*3.2) + ...
%                   0.805*(strcmp(site_cond,'soil')) + ...
%                   0.063*max(Rrup - 10, 0)) + ...
%                   calc_ln_dur_incr(nias);
%               dur = exp(ln_dur);
%               sd = 0.55;
%  end
%  
%  function ln_dur_incr = calc_ln_dur_incr(nias)
%   
%         ln_i_ratio = log((nias - 0.05) / (1 - nias));
%         ln_dur_incr = -0.532 + 0.552 * ln_i_ratio - 0.0262 * ln_i_ratio^2;
%     
%   end